from django.test import TestCase
from .models import *

# Create your tests here.


class ScanModelTest(TestCase):
    def test_bulk_create_scans(self):
        labs_and_centers = {
            "Radiology lab": {
                "CT Scan": 300,
                "MRI Scan": 500,
                "X-Ray": 60,
                "X-Ray Skeletal Survey": 150,
                "Sonography (Ultrasound / USG)": 100,
                "Sonomamography / Sonomamogram": 120,
                "4D Scan": 120
            },
            "Nuclear Medicine lab": {
                "Bone Scan": 250,
                "DMSA Scan": 200,
                "Gallium Scan": 350,
                "HIDA Scan": 250,
                "MIBG Scan": 300,
                "MUGA Scan": 250,
                "Thallium Scan": 300,
                "Thyroid Scan": 150,
                "PET-CT Scan": 600,
                "VQ Scan (Lung Ventilation and Lung Perfusion Scan)": 300
            },
            "Cardiology Lab": {
                "Stress Echo Test": 180,
                "Doppler Ultrasound": 150
            }
        }
        Lab.objects.create(name="Nuclear Medicine lab")
        Lab.objects.create(name="Cardiology Lab")
        Lab.objects.create(name="Radiology lab")

        scan = [ScanTest(name=scan, price=price, lab=Lab.objects.get(name=dep)) for dep,
                scans in labs_and_centers.items() for scan, price in scans.items()]

        ScanTest.objects.bulk_create(scan)

        self.assertEqual(ScanTest.objects.count(),
                         19)


# class DegreeModelTest(TestCase):
#     def test_bulk_create_degrees(self):
#         medical_specialists = [
#             "Family practice physician",
#             "Internal medicine physician",
#             "Pediatricians",
#             "Geriatric medicine doctors",
#             "Allergists",
#             "Dermatologists",
#             "Infectious disease doctors",
#             "Ophthalmologists",
#             "Obstetrician/gynecologists",
#             "Cardiologists",
#             "Endocrinologists",
#             "Gastroenterologists",
#             "Nephrologists",
#             "Urologists",
#             "Pulmonologists",
#             "Otolaryngologists",
#             "Neurologists",
#             "Psychiatrists",
#             "Oncologists",
#             "Radiologists",
#             "Rheumatologists",
#             "General surgeons",
#             "Orthopedic surgeons",
#             "Cardiac surgeons",
#             "Anesthesiologists",
#             "Family medicine",
#             "Internal Medicine",
#             "Pediatrician",
#             "Obstetricians/gynecologist (OBGYNs)",
#             "Cardiologist",
#             "Oncologist",
#             "Gastroenterologist",
#             "Pulmonologist",
#             "Infectious disease",
#             "Nephrologist",
#             "Endocrinologist",
#             "Ophthalmologist",
#             "Otolaryngologist",
#             "Dermatologist",
#             "Psychiatrist",
#             "Neurologist",
#             "Radiologist",
#             "Anesthesiologist",
#             "Surgeon",
#             "Physician executive",
#             "Addiction medicine specialist",
#             "Adolescent medicine specialist",
#             "Allergist (immunologist)",
#             "Anatomic pathologist",
#             "Cardiac electrophysiologist",
#             "Cardiovascular surgeon",
#             "Clinical laboratory immunologist",
#             "Colon and rectal surgeon",
#             "Critical care medicine specialist",
#             "Cytopathologist",
#             "Dermatopathologist",
#             "Developmental pediatrician",
#             "Emergency medicine specialist",
#             "Endocrinologist",
#             "Forensic pathologist",
#             "Gastroenterologist",
#             "Geriatric psychiatrist",
#             "Hand surgeon",
#             "Hematologist",
#             "Hepatologist",
#             "Hospitalist",
#             "Hyperbaric physician",
#             "Infectious disease specialist",
#             "Interventional cardiologist",
#             "Medical examiner",
#             "Medical geneticist",
#             "Neonatologist",
#             "Nephrologist",
#             "Neurodevelopmental pediatrician",
#             "Neurological surgeon",
#             "Neuromusculoskeletal medicine doctor",
#             "Neuropathologist",
#             "Neuroradiologist",
#             "Nuclear medicine specialist",
#             "Obstetrician",
#             "Occupational medicine specialist",
#             "Orthopedic surgeon",
#             "Otolaryngologist (head and neck surgeon)",
#             "Pain management specialist",
#             "Palliative medicine specialist",
#             "Pathologist",
#             "Pediatric allergist",
#             "Pediatric cardiologist",
#             "Pediatric endocrinologist",
#             "Pediatric gastroenterologist",
#             "Pediatric hematologist",
#             "Pediatric infectious disease specialist",
#             "Pediatric nephrologist",
#             "Pediatric pulmonologist",
#             "Pediatric rheumatologist",
#             "Pediatric surgeon",
#             "Pediatric urologist",
#             "Perinatologist",
#             "Physical medicine and rehabilitation specialist",
#             "Plastic surgeon",
#             "Preventive medicine specialist",
#             "Psychiatrist (child and adolescent)",
#             "Pulmonologist",
#             "Radiation oncologist",
#             "Reproductive endocrinologist",
#             "Rheumatologist",
#             "Sleep disorders specialist",
#             "Spinal cord injury specialist",
#             "Sports medicine specialist",
#             "Surgical pathologist",
#             "Thoracic surgeon",
#             "Transplant hepatologist",
#             "Trauma surgeon",
#             "Urologist",
#             "Vascular and interventional radiologist",
#             "Vascular surgeon"
#         ]
#         medical_specialists = set(medical_specialists)
#         medical_specialists_objects = [Specialist(name=special)
#                                        for special in medical_specialists]
#         Specialist.objects.bulk_create(medical_specialists_objects)
#         # Check if the degrees were added
#         self.assertEqual(Specialist.objects.count(),
#                          len(medical_specialists_objects))

"""
class DegreeModelTest(TestCase):
    def test_bulk_create_degrees(self):
        degrees = [
            'MBBS',
            'MD',
            'DO',
            'DC',
            'DDS',
            'DMD',
            'BHMS',
            'BAMS',
            'BPT',
            'BOT',
            'BSc Nursing',
            'BPharm',
            'MPharm',
            'MS',
            'MDS',
            'MPT',
            'MOT',
            'MPH',
            'MHA',
            'MHM',
            'MSc Medical Science',
            'MSc Medical Imaging Technology',
            'MSc Medical Microbiology',
            'MSc Medical Biochemistry',
            'MSc Medical Anatomy',
            'MSc Medical Physiology',
            'MSc Medical Pharmacology',
            'MSc Medical Laboratory Technology',
            'MSc Medical Biotechnology',
            'MSc Medical Genetics',
            'MSc Medical Neuroscience',
            'MSc Medical Virology',
            'MSc Medical Toxicology',
            'MSc Medical Pathology',
            'MSc Medical Immunology',
            'MSc Medical Endocrinology',
            'MSc Medical Hematology',
            'MSc Medical Oncology',
            'MSc Medical Rheumatology',
            'MSc Medical Nephrology',
            'MSc Medical Gastroenterology',
            'MSc Medical Pulmonology',
            'MSc Medical Cardiology',
            'MSc Medical Radiology',
            'MSc Medical Dermatology',
            'MSc Medical Psychiatry',
            'MSc Medical Ophthalmology',
            'MSc Medical Otorhinolaryngology',
            'MSc Medical Orthopedics',
            'MSc Medical Urology',
            'MSc Medical Neurosurgery',
            'MSc Medical Pediatric Surgery',
            'MSc Medical Plastic Surgery',
            'MSc Medical Cardiothoracic Surgery',
            'MSc Medical Vascular Surgery',
            'MSc Medical Transplant Surgery',
            'MSc Medical Trauma Surgery',
            'MSc Medical Laparoscopic Surgery',
            'MSc Medical Bariatric Surgery',
            'MSc Medical Colorectal Surgery',
            'MSc Medical Endocrine Surgery',
            'MSc Medical Breast Surgery',
            'MSc Medical Surgical Oncology',
            'MSc Medical Head and Neck Surgery',
            'MSc Medical Pediatric Urology',
            'MSc Medical Pediatric Nephrology',
            'MSc Medical Pediatric Neurology',
            'MSc Medical Pediatric Gastroenterology',
            'MSc Medical Pediatric Endocrinology',
            'MSc Medical Pediatric Cardiology',
            'MSc Medical Pediatric Rheumatology',
            'MSc Medical Pediatric Hematology',
            'MSc Medical Pediatric Oncology',
            'MSc Medical Pediatric Pulmonology',
            'MSc Medical Pediatric Allergy and Immunology',
            'MSc Medical Pediatric Infectious Disease',
            'MSc Medical Pediatric Intensive Care',
            'MSc Medical Pediatric Dermatology',
            'MSc Medical Pediatric Ophthalmology',
            'MSc Medical Pediatric Otorhinolaryngology',
            'MSc Medical Pediatric Orthopedics',
            'MSc Medical Pediatric Radiology',
            'MSc Medical Pediatric Anesthesia',
            'MSc Medical Pediatric Dentistry',
            'MSc Medical Pediatric Psychology',
            'MSc Medical Pediatric Rehabilitation',
            'MSc Medical Pediatric Nutrition',
            'MSc Medical Pediatric Genetics',
            'MSc Medical Pediatric Hepatology',
            'MSc Medical Pediatric Emergency Medicine',
            'MSc Medical Pediatric Critical Care',
            'MSc Medical Pediatric Neonatology',
            'MSc Medical Pediatric Nephrology',
            'MSc Medical Pediatric Rheumatology',
            'MSc Medical Pediatric Hematology',
            'MSc Medical Pediatric Oncology',
            'MSc Medical Pediatric Pulmonology'
        ]

        degree_objects = [Degree(name=degree) for degree in degrees]
        degree_objects = list(
            {degree.name: degree for degree in degree_objects}.values())
        Degree.objects.bulk_create(degree_objects)

        # Check if the degrees were added
        self.assertEqual(Degree.objects.count(), len(degree_objects))
        self.assertEqual(Degree.objects.first().name, 'MBBS')
"""
