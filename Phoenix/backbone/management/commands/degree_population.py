from django.core.management.base import BaseCommand, CommandError
from backbone.models import Degree


class Command(BaseCommand):
    help = 'Populate the database with initial degree data'

    def handle(self, *args, **kwargs):
        degrees = [
            'MBBS',
            'MD',
            'DO',
            'DC',
            'DDS',
            'DMD',
            'BHMS',
            'BAMS',
            'BPT',
            'BOT',
            'BSc Nursing',
            'BPharm',
            'MPharm',
            'MS',
            'MDS',
            'MPT',
            'MOT',
            'MPH',
            'MHA',
            'MHM',
            'MSc Medical Science',
            'MSc Medical Imaging Technology',
            'MSc Medical Microbiology',
            'MSc Medical Biochemistry',
            'MSc Medical Anatomy',
            'MSc Medical Physiology',
            'MSc Medical Pharmacology',
            'MSc Medical Laboratory Technology',
            'MSc Medical Biotechnology',
            'MSc Medical Genetics',
            'MSc Medical Neuroscience',
            'MSc Medical Virology',
            'MSc Medical Toxicology',
            'MSc Medical Pathology',
            'MSc Medical Immunology',
            'MSc Medical Endocrinology',
            'MSc Medical Hematology',
            'MSc Medical Oncology',
            'MSc Medical Rheumatology',
            'MSc Medical Nephrology',
            'MSc Medical Gastroenterology',
            'MSc Medical Pulmonology',
            'MSc Medical Cardiology',
            'MSc Medical Radiology',
            'MSc Medical Dermatology',
            'MSc Medical Psychiatry',
            'MSc Medical Ophthalmology',
            'MSc Medical Otorhinolaryngology',
            'MSc Medical Orthopedics',
            'MSc Medical Urology',
            'MSc Medical Neurosurgery',
            'MSc Medical Pediatric Surgery',
            'MSc Medical Plastic Surgery',
            'MSc Medical Cardiothoracic Surgery',
            'MSc Medical Vascular Surgery',
            'MSc Medical Transplant Surgery',
            'MSc Medical Trauma Surgery',
            'MSc Medical Laparoscopic Surgery',
            'MSc Medical Bariatric Surgery',
            'MSc Medical Colorectal Surgery',
            'MSc Medical Endocrine Surgery',
            'MSc Medical Breast Surgery',
            'MSc Medical Surgical Oncology',
            'MSc Medical Head and Neck Surgery',
            'MSc Medical Pediatric Urology',
            'MSc Medical Pediatric Nephrology',
            'MSc Medical Pediatric Neurology',
            'MSc Medical Pediatric Gastroenterology',
            'MSc Medical Pediatric Endocrinology',
            'MSc Medical Pediatric Cardiology',
            'MSc Medical Pediatric Rheumatology',
            'MSc Medical Pediatric Hematology',
            'MSc Medical Pediatric Oncology',
            'MSc Medical Pediatric Pulmonology',
            'MSc Medical Pediatric Allergy and Immunology',
            'MSc Medical Pediatric Infectious Disease',
            'MSc Medical Pediatric Intensive Care',
            'MSc Medical Pediatric Dermatology',
            'MSc Medical Pediatric Ophthalmology',
            'MSc Medical Pediatric Otorhinolaryngology',
            'MSc Medical Pediatric Orthopedics',
            'MSc Medical Pediatric Radiology',
            'MSc Medical Pediatric Anesthesia',
            'MSc Medical Pediatric Dentistry',
            'MSc Medical Pediatric Psychology',
            'MSc Medical Pediatric Rehabilitation',
            'MSc Medical Pediatric Nutrition',
            'MSc Medical Pediatric Genetics',
            'MSc Medical Pediatric Hepatology',
            'MSc Medical Pediatric Emergency Medicine',
            'MSc Medical Pediatric Critical Care',
            'MSc Medical Pediatric Neonatology',
            'MSc Medical Pediatric Nephrology',
            'MSc Medical Pediatric Rheumatology',
            'MSc Medical Pediatric Hematology',
            'MSc Medical Pediatric Oncology',
            'MSc Medical Pediatric Pulmonology'
        ]

        try:
            degree_objects = [Degree(name=degree) for degree in degrees]
            degree_objects = list(
                {degree.name: degree for degree in degree_objects}.values())
            Degree.objects.bulk_create(degree_objects)
        except Exception as e:
            raise CommandError(f"Error occured: {e}")
        self.stdout.write(self.style.SUCCESS(
            f'Successfully added {Degree.objects.count()} users!'))
